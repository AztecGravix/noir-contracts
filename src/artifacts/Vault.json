{
  "name": "Vault",
  "functions": [
    {
      "name": "_initialize",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "new_admin",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "initial_liquidity",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "add_market",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "market_id",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "private"
        },
        {
          "name": "maxTotalLongs",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        },
        {
          "name": "maxTotalShorts",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        },
        {
          "name": "maxLeverage",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        },
        {
          "name": "openFeeRate",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 64
          },
          "visibility": "private"
        },
        {
          "name": "baseSpreadRate",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 64
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "admin",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcKA/RxH8/vUG9Qc/gDZrY+Gmi3j+WyKQjoj+FTZqlQGdmZ7daRJS8o5Ml1I/1MWVHe0PK/cpwxFUL084YNmEF0qxT3qdadF3e067gnyOPa/FwbxhXiCvIZw+x12VeBFrjLHp3oHNT+AZ3TeEe124b1M48A72Da0saDGlxdbX0EcPLEh1xQQc0efLJZ3q5B55yi9lp0RPuPeLfjIJ/Mz/4Zx7P2328TudpvCiCyEdKEwyveexhP48m7uLMy7fEan7kuCrLMV4lLa+7hAUAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 12,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "construct_position",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "id",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        },
        {
          "name": "collateral",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        },
        {
          "name": "market_id",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "private"
        },
        {
          "name": "market_price",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        },
        {
          "name": "pos_type",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "private"
        },
        {
          "name": "leverage",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        },
        {
          "name": "owner",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::position_note::PositionNote",
          "fields": [
            {
              "name": "id",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 32
              }
            },
            {
              "name": "marketIdx",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 8
              }
            },
            {
              "name": "posType",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 8
              }
            },
            {
              "name": "initialCollateral",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "openFee",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "openPrice",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "markPrice",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "leverage",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 32
              }
            },
            {
              "name": "liquidationThresholdRate",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 64
              }
            },
            {
              "name": "owner",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "secret_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "secret",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "header",
              "type": {
                "kind": "struct",
                "path": "aztec::note::note_header::NoteHeader",
                "fields": [
                  {
                    "name": "contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_slot",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_transient",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "admin",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "liquidity",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "liquidity",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "integer",
          "sign": "unsigned",
          "width": 120
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7WTwQ3CMAxFnbRNCEgswJEFiligM7BBJSqOSMCB8aEiVh+hcCHxxW7s/v/j2FZEjLysksnMl3gbvcNZF337pzlw5cJsnhhNxArQbKNfx7vYvLz71Uz/HHqciWfHtyGugCvI+xvqWZX0IiDW3Ni7DfL1zD9aW8/U8e5NgbuTp8O3ci2hoYYWl1dLO2J4mawCl+pQTR65RWYdJtFxB69yBcQeZzap81JmZkvMAmdO7ddusCe6q9fb+dKfhsPQHw0g0lG2gGHMddNn50porea8fErM1o8U1yR+tAc7CbYj/AUAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "market",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "market_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::market::Market",
          "fields": [
            {
              "name": "totalLongs",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "totalShorts",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "maxTotalLongs",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "maxTotalShorts",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "maxLeverage",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 32
              }
            },
            {
              "name": "openFeeRate",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 64
              }
            },
            {
              "name": "baseSpreadRate",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 64
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8WY21IaQRCGZzmjSFQURVFWlHhKWUtO3uRinyF5AqokuUGpAnJ4/GTG6fA5blll0RRdBdP07Pb//90DzGzVGBOZR8vDp0ks9WOymPUjvVxJGTxz0GGt4MeiH0t+lHsquPeXH6vIY4L7FGuQlPTrmlidNegI61I1T3sd6i0glg9qV8V8CTGZLyMm81Lfuo8VdPW+J0+xcP2m8Mm/qMvF9bOkrI91NeZ5T9YxX8JY1uXhvq9F87SmYd9fwzW3Yq7L6n9FN6db36yptZfWdwX6qspcap4LfzdMRm3Z23VdDonNUZvL/Y8pOGv+FV4nfgHz6+BZ1+Xp1uCGzxX5Vz3gYnHfLAG3jr6Qh2Dlcc2lHzdQD6njMmtDS+ELFrlEK+bC/0yDWD2oFf9H2YMHzG96P5eRZzPjOmrfWoJ24qT4vAVtUcBvlVzWMrhs63JxvzENMzfpzzZ4CKcGeOwo84gCHn+AuwPcXeVe2BzNDP270C/4TfDY0+Xh9DcD/YK7B9x9XVy352pl6N+HfsFvgceBLg+nvxXoF9wD4B7q4n6wOdoZ+g+hX/Db4HGky8Ppbwf6BfcIuMe6uB9tjk6G/mPoF/wOeMS6PJx+8oiBGwP3RBf3k83RzdB/Av2C3wWPU10eTj95pMA9Be6ZLu5nm6OXof8M+gW/Bx5vdXk4/b1Av+AKVhV+A7Fz7zcRu/B+CzHZ/7URu/J+B7Fr73cRexfUgPsf8pPzwjlicg6/QEzOEZeIyZn2CjHZ818jJuce4VT29wp26sdkMbtdwrnxlvUQe2lfKvhWs+yTp7PxZPBj+HU4uIuQooByWMshDX0e6aTkfBTEI53ke/aYMPVjspj1KcAAUEjnPbmimT8/qOB63ifr64sfvz3WKZ6OxrM4iR/+vQ9Go/Hv4d1NzLlpfP9zOouns8FkFn+fjO/j/s1f2vycnygVAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "open_position",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "id",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        },
        {
          "name": "collateral",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        },
        {
          "name": "leverage",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        },
        {
          "name": "pos_type",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "private"
        },
        {
          "name": "market_id",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "private"
        },
        {
          "name": "market_price",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "pending_positions",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::position_note::PositionNote",
                  "fields": [
                    {
                      "name": "id",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    },
                    {
                      "name": "marketIdx",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 8
                      }
                    },
                    {
                      "name": "posType",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 8
                      }
                    },
                    {
                      "name": "initialCollateral",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "openFee",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "openPrice",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "markPrice",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "leverage",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    },
                    {
                      "name": "liquidationThresholdRate",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 64
                      }
                    },
                    {
                      "name": "owner",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "secret_hash",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "secret",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "pnl_and_liq",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "note",
          "type": {
            "kind": "struct",
            "path": "types::position_note::PositionNote",
            "fields": [
              {
                "name": "id",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "marketIdx",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 8
                }
              },
              {
                "name": "posType",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 8
                }
              },
              {
                "name": "initialCollateral",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "openFee",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "openPrice",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "markPrice",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "leverage",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "liquidationThresholdRate",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 64
                }
              },
              {
                "name": "owner",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "secret_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "secret",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "header",
                "type": {
                  "kind": "struct",
                  "path": "aztec::note::note_header::NoteHeader",
                  "fields": [
                    {
                      "name": "contract_address",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "nonce",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "is_transient",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "close_price",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 120
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::position_note::PnlAndLiq",
          "fields": [
            {
              "name": "pnl",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "positive",
              "type": {
                "kind": "boolean"
              }
            },
            {
              "name": "liqPrice",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "positions",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "user",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::position_note::PositionNote",
                  "fields": [
                    {
                      "name": "id",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    },
                    {
                      "name": "marketIdx",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 8
                      }
                    },
                    {
                      "name": "posType",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 8
                      }
                    },
                    {
                      "name": "initialCollateral",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "openFee",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "openPrice",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "markPrice",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 120
                      }
                    },
                    {
                      "name": "leverage",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    },
                    {
                      "name": "liquidationThresholdRate",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 64
                      }
                    },
                    {
                      "name": "owner",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "secret_hash",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "secret",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "resolve_open_position",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "secret",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "serialize_pos",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "note",
          "type": {
            "kind": "struct",
            "path": "types::position_note::PositionNote",
            "fields": [
              {
                "name": "id",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "marketIdx",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 8
                }
              },
              {
                "name": "posType",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 8
                }
              },
              {
                "name": "initialCollateral",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "openFee",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "openPrice",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "markPrice",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 120
                }
              },
              {
                "name": "leverage",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "liquidationThresholdRate",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 64
                }
              },
              {
                "name": "owner",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "secret_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "secret",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "header",
                "type": {
                  "kind": "struct",
                  "path": "aztec::note::note_header::NoteHeader",
                  "fields": [
                    {
                      "name": "contract_address",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "nonce",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "is_transient",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 11,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/9WYfW6CQBDFFxDkS7R8g+gZ6A24Qq/Q+x+iO3YmfVn9ownbNDPJZNf3IvPbQc3gYowJzHdENi/mOcTfeF33xXvg71rrX3KGSjgjJZwHJZyxEs5ECedRCWeqhDNTwpkr4SyUcJZKOE9KOCslnGclnBePnAEwFrx/s1nbbGy2Njubvc3B5mhzsjnbvMIZP3jN+P0UZ9Bk3q1AE/8EmvglaOIXoImfg4a+rOKnoIl/BE38BDTxY9DEP4AmfgSa+CFo4gegiW+c+hQbr+vOSIz3z+BKZ+7gHMY5b8V6/aIPzYt+tea5r3J97H/v9Im0gfd4P0fe432fYC/rzPscrrvwfuN13RefVAe/KxSB83qD/QIsN78sj9+lO9QSLqlTgF8Dx90vx+PZ9OacX14j329ZG0WsrSLWThFrr4h1UMQ6KmKdFLHOilgLRazlP7NmoF1BCx1mmlfcOcDrQ4LhAlSYhi0armJuDBVPzc+QXHDjaNim4Y2Gc/yTes/DwRdAt4L8/RYAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "eJzNlM0KgzAQBt9lz6G4m/+8SukhtBYE0VK9Sd7dSlUKpngR2VsC88Eckhmgbu+xr9qmgzBAcdEQrgN0r9hM966P7x6CdtYLKJvHdPQ+CXhWdQkBk9iwSIZmFqWUK2tVBpbWzKxCu6LGpJv4uBhGLpaRi2Pk4hm5YMFJBjnJECcZyUlGcZLhVF/klF/k1F/kFGA8t8CK5CKj6Fdmi5JeFMi4FXX6603nxvo473O7fpx3ti2EbtlovXlblE3Azib7U3c22Q+1s8m++/+blEalYi3h",
      "",
      "",
      "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",
      "",
      "",
      "",
      "",
      "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IRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyo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UUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2asiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiF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ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoIRs1ZKOGbNSQjRqyUUM2ashGDdmoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghJ2rIiRpyooacqCEnasiJGnKihpyoISdqyIkacqKGnKghZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSFnasiZGnKmhpypIWdqyJkacqaGnKkhZ2rImRpypoacqSEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZcqCEXasiFGnKhhlyoIRdqyIUacqGGXKghF2rIhRpyoYZc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"
    ],
    "fileMap": {
      "1": {
        "source": "mod types;\n\n\n\ncontract Vault {\n    use dep::std::option::Option;\n    use dep::safe_math::SafeU120;\n\n    use dep::value_note::{\n        balance_utils,\n        utils::{increment, decrement},\n        value_note::{VALUE_NOTE_LEN, ValueNote, ValueNoteMethods},\n    };\n\n    use dep::aztec::{\n        abi,\n        log::emit_encrypted_log,\n        context::{PrivateContext, PublicContext, Context},\n        oracle::{\n            get_public_key::get_public_key,\n        },\n        note::{\n            note_getter_options::NoteGetterOptions,\n            note_viewer_options::NoteViewerOptions,\n            note_header::NoteHeader,\n            utils as note_utils\n        },\n        state_vars::{map::Map, public_state::PublicState, singleton::Singleton, set::Set},\n        types::type_serialization::{\n            aztec_address_serialization::{AztecAddressSerializationMethods, AZTEC_ADDRESS_SERIALIZED_LEN},\n        },\n        hash::{compute_secret_hash},\n        types::address::{AztecAddress},\n        selector::compute_selector,\n    };\n    use crate::types::{\n        market::{MARKET_SERIALIZED_LEN, Market, MarketSerializationMethods, HUNDRED_PERCENT},\n        position_note::{POSITION_NOTE_SERIALIZED_LEN, PositionNoteSerializationMethods, PositionNote, LIQUIDATION_THRESHOLD_RATE, LEVERAGE_BASE, SCALING_FACTOR, PnlAndLiq},\n        safe_u120_serialization::{SAFE_U120_SERIALIZED_LEN, SafeU120SerializationMethods},\n        position_map::{PositionMap}\n    };\n    struct Storage {\n        admin: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        markets: Map<PublicState<Market, MARKET_SERIALIZED_LEN>>,\n        liquidity: PublicState<SafeU120, SAFE_U120_SERIALIZED_LEN>,\n        positions: PositionMap,\n        pendingRequests: Set<PositionNote, POSITION_NOTE_SERIALIZED_LEN>\n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                admin: PublicState::new(\n                    context,\n                    1,\n                    AztecAddressSerializationMethods,\n                ),\n                markets: Map::new(\n                    context,\n                    2,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            MarketSerializationMethods,\n                        )\n                    },\n                ),\n                liquidity: PublicState::new(\n                    context,\n                    3,\n                    SafeU120SerializationMethods,\n                ),\n                // -------------------- PRIVATE ----------------------\n                positions: PositionMap::new(context, 4),\n                pendingRequests: Set::new(context, 5, PositionNoteSerializationMethods)\n            }\n        }\n    }\n\n\n    #[aztec(private)]\n    fn constructor(admin: AztecAddress, liquidity: Field) {\n        let selector = compute_selector(\"_initialize((Field),Field)\");\n        context.call_public_function(context.this_address(), selector, [admin.address, liquidity]);\n    }\n\n    #[aztec(public)]\n    fn add_market(\n        market_id: u8,\n        maxTotalLongs: u120,\n        maxTotalShorts: u120,\n        maxLeverage: u32,\n        openFeeRate: u64,\n        baseSpreadRate: u64\n    ) {\n        let market = storage.markets.at(market_id as Field);\n        market.write(Market {\n            totalLongs: 0,\n            totalShorts: 0,\n            maxTotalLongs: maxTotalLongs,\n            maxTotalShorts: maxTotalShorts,\n            maxLeverage: maxLeverage,\n            openFeeRate: openFeeRate,\n            baseSpreadRate: baseSpreadRate\n        });\n        1\n    }\n\n\n    #[aztec(public)]\n    fn open_position(\n        id: u32,\n        collateral: u120,\n        leverage: u32,\n        pos_type: u8,\n        market_id: u8,\n        market_price: u120, // todo: check authorized signature with price\n        secret_hash: Field\n    ) {\n        // TODO: check market exists and other checks\n        let sender = context.msg_sender();\n        let mut note = construct_position(\n            id,\n            collateral,\n            market_id,\n            market_price,\n            pos_type,\n            leverage,\n            sender,\n            secret_hash\n        );\n        storage.pendingRequests.insert_from_public(&mut note);\n        1\n    }\n\n    #[aztec(private)]\n    fn resolve_open_position(\n        secret: Field\n    ) {\n        let sender = context.msg_sender();\n        let pendingRequests = storage.pendingRequests;\n        let secret_hash = compute_secret_hash(secret);\n        let options = NoteGetterOptions::new().select(10, secret_hash).set_limit(1);\n        let notes = pendingRequests.get_notes(options);\n        let mut note = notes[0].unwrap_unchecked();\n        pendingRequests.remove(note);\n\n        // save new position\n        storage.positions.at(AztecAddress::new(sender)).add(&mut note);\n        emit_encrypted_log(\n            &mut context,\n            context.this_address(),\n            storage.positions.slot_for(AztecAddress::new(sender)), // todo: calc slot\n            get_public_key(sender),\n            note.serialize()\n        );\n        // todo: increase market OI\n        1\n    }\n\n    // ---------------------------------------- PUBLIC -----------------------------------------------\n    #[aztec(public)]\n    internal fn _initialize(\n        new_admin: AztecAddress,\n        initial_liquidity: Field\n    ) {\n        storage.admin.write(new_admin);\n        let initial = SafeU120::new(initial_liquidity);\n        storage.liquidity.write(initial);\n    }\n\n    // #[aztec(private)]\n    // fn close_position(\n\n    // )\n\n    // #[aztec(public)]\n    // internal fn _increase_market_oi(\n    //     market_id: Field,\n    //     amount: Field,\n    //     pos_type: Field\n    // ) {\n        \n    // }\n\n    unconstrained fn admin() -> Field {\n        storage.admin.read().address\n    }\n\n    unconstrained fn market(market_id: Field) -> Market {\n        storage.markets.at(market_id).read()\n    }\n\n    // just helper\n    unconstrained fn construct_position(\n        id: u32,\n        collateral: u120,\n        market_id: u8,\n        market_price: u120,\n        pos_type: u8,\n        leverage: u32,\n        owner: Field,\n        secret_hash: Field\n    ) -> PositionNote {\n        let market = storage.markets.at(market_id as Field).read();\n        let open_fee = (collateral * market.openFeeRate as u120) / HUNDRED_PERCENT as u120;\n        let mut open_price = market_price;\n        if (pos_type == 0) {\n            // long\n            open_price = (open_price * (HUNDRED_PERCENT + market.baseSpreadRate) as u120) / HUNDRED_PERCENT as u120;\n        } else if (pos_type == 1) {\n            // short\n            open_price = (open_price * (HUNDRED_PERCENT - market.baseSpreadRate) as u120) / HUNDRED_PERCENT as u120;\n        } else {\n            assert (false);\n        }\n\n        PositionNote::new(\n            id,\n            market_id,\n            pos_type,\n            collateral,\n            open_fee,\n            open_price,\n            market_price,\n            leverage,\n            LIQUIDATION_THRESHOLD_RATE,\n            owner,\n            secret_hash\n        )\n    }\n\n    // helper func\n    unconstrained fn serialize_pos(note: PositionNote) -> [Field; POSITION_NOTE_SERIALIZED_LEN] {\n        note.serialize()\n    }\n\n    unconstrained fn pending_positions() -> [Option<PositionNote>; 10] {\n        let options = NoteViewerOptions::new();\n        storage.pendingRequests.view_notes(options)\n    }\n\n    unconstrained fn positions(user: Field) -> [Option<PositionNote>; 10] {\n        let options = NoteViewerOptions::new();\n        storage.positions.at(AztecAddress::new(user)).set.view_notes(options)\n    }\n\n    // return pnl, pnl sign, liq price\n    unconstrained fn pnl_and_liq(note: PositionNote, close_price: u120) -> PnlAndLiq {\n        let collateral = note.initialCollateral - note.openFee;\n        let leveraged_pos = (collateral * LEVERAGE_BASE) / note.leverage as u120;\n\n        let mut pnl = 0;\n        let mut positive: bool = true; // noir does not support signed integers, so we will idicate sign with var. 0 - positive, 1 - negative \n        if (close_price <= note.openPrice) {\n            pnl = SCALING_FACTOR - (close_price * SCALING_FACTOR) / note.openPrice;\n            positive = false;\n        } else {\n            pnl = (close_price * SCALING_FACTOR) / note.openPrice - SCALING_FACTOR;\n            positive = true;\n        }\n        // short\n        if (note.posType == 1) {\n            positive = !positive;\n        }\n        pnl = pnl * leveraged_pos / SCALING_FACTOR;\n\n        let mut liq_price_dist = collateral * (HUNDRED_PERCENT - LIQUIDATION_THRESHOLD_RATE) as u120 / HUNDRED_PERCENT as u120;\n        liq_price_dist = note.openPrice * liq_price_dist / leveraged_pos;\n\n        let mut liq_price = 0;\n        // long\n        if (note.posType == 0) {\n            if (positive) {\n                liq_price = note.openPrice - liq_price_dist;\n            } else {\n                liq_price = note.openPrice + liq_price_dist;\n            }\n        } else {\n            if (positive) {\n                liq_price = note.openPrice + liq_price_dist;\n            } else {\n                liq_price = note.openPrice - liq_price_dist;\n            }\n        }\n\n        PnlAndLiq { pnl: pnl, positive: positive, liqPrice: liq_price }\n    }\n\n    unconstrained fn liquidity() -> u120 {\n        storage.liquidity.read().value\n    }\n\n\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; 12]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n        note_utils::compute_note_hash_and_nullifier(PositionNoteSerializationMethods, note_header, preimage)\n    }\n}\n\n",
        "path": "/home/maga/projects/noir-contracts/src/contracts/src/main"
      },
      "5": {
        "source": "mod poseidon;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input : [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input : [u8; N]) -> [u8; 32] {}\n\npub fn pedersen<N>(input : [Field; N]) -> [Field; 2] {\n    pedersen_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn pedersen_with_separator<N>(_input : [Field; N], _separator : u32) -> [Field; 2] {}\n\n#[foreign(hash_to_field_128_security)]\npub fn hash_to_field<N>(_input : [Field; N]) -> Field {}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input : [u8; N], _message_size: u32) -> [u8; 32] {}\n\n// mimc-p/p implementation\n// constants are (publicly generated) random numbers, for instance using keccak as a ROM.\n// You must use constants generated for the native field\n// Rounds number should be ~ log(p)/log(exp)\n// For 254 bit primes, exponent 7 and 91 rounds seems to be recommended\nfn mimc<N>(x: Field, k: Field, constants: [Field; N], exp : Field) -> Field {\n    //round 0\n    let mut t = x + k;\n    let mut h = t.pow_32(exp);\n    //next rounds\n    for i in 1 .. constants.len() {\n        t = h + k + constants[i];\n        h = t.pow_32(exp);\n    };\n    h + k\n}\n\nglobal MIMC_BN254_ROUNDS = 91;\n\n//mimc implementation with hardcoded parameters for BN254 curve.\npub fn mimc_bn254<N>(array: [Field; N]) -> Field {\n    //mimc parameters\n    let exponent = 7;\n    //generated from seed \"mimc\" using keccak256 \n    let constants: [Field; MIMC_BN254_ROUNDS] = [\n        0, \n        20888961410941983456478427210666206549300505294776164667214940546594746570981,\n        15265126113435022738560151911929040668591755459209400716467504685752745317193,\n        8334177627492981984476504167502758309043212251641796197711684499645635709656,\n        1374324219480165500871639364801692115397519265181803854177629327624133579404,\n        11442588683664344394633565859260176446561886575962616332903193988751292992472,\n        2558901189096558760448896669327086721003508630712968559048179091037845349145,\n        11189978595292752354820141775598510151189959177917284797737745690127318076389,\n        3262966573163560839685415914157855077211340576201936620532175028036746741754,\n        17029914891543225301403832095880481731551830725367286980611178737703889171730,\n        4614037031668406927330683909387957156531244689520944789503628527855167665518,\n        19647356996769918391113967168615123299113119185942498194367262335168397100658,\n        5040699236106090655289931820723926657076483236860546282406111821875672148900,\n        2632385916954580941368956176626336146806721642583847728103570779270161510514,\n        17691411851977575435597871505860208507285462834710151833948561098560743654671,\n        11482807709115676646560379017491661435505951727793345550942389701970904563183,\n        8360838254132998143349158726141014535383109403565779450210746881879715734773,\n        12663821244032248511491386323242575231591777785787269938928497649288048289525,\n        3067001377342968891237590775929219083706800062321980129409398033259904188058,\n        8536471869378957766675292398190944925664113548202769136103887479787957959589,\n        19825444354178182240559170937204690272111734703605805530888940813160705385792,\n        16703465144013840124940690347975638755097486902749048533167980887413919317592,\n        13061236261277650370863439564453267964462486225679643020432589226741411380501,\n        10864774797625152707517901967943775867717907803542223029967000416969007792571,\n        10035653564014594269791753415727486340557376923045841607746250017541686319774,\n        3446968588058668564420958894889124905706353937375068998436129414772610003289,\n        4653317306466493184743870159523234588955994456998076243468148492375236846006,\n        8486711143589723036499933521576871883500223198263343024003617825616410932026,\n        250710584458582618659378487568129931785810765264752039738223488321597070280,\n        2104159799604932521291371026105311735948154964200596636974609406977292675173,\n        16313562605837709339799839901240652934758303521543693857533755376563489378839,\n        6032365105133504724925793806318578936233045029919447519826248813478479197288,\n        14025118133847866722315446277964222215118620050302054655768867040006542798474,\n        7400123822125662712777833064081316757896757785777291653271747396958201309118,\n        1744432620323851751204287974553233986555641872755053103823939564833813704825,\n        8316378125659383262515151597439205374263247719876250938893842106722210729522,\n        6739722627047123650704294650168547689199576889424317598327664349670094847386,\n        21211457866117465531949733809706514799713333930924902519246949506964470524162,\n        13718112532745211817410303291774369209520657938741992779396229864894885156527,\n        5264534817993325015357427094323255342713527811596856940387954546330728068658,\n        18884137497114307927425084003812022333609937761793387700010402412840002189451,\n        5148596049900083984813839872929010525572543381981952060869301611018636120248,\n        19799686398774806587970184652860783461860993790013219899147141137827718662674,\n        19240878651604412704364448729659032944342952609050243268894572835672205984837,\n        10546185249390392695582524554167530669949955276893453512788278945742408153192,\n        5507959600969845538113649209272736011390582494851145043668969080335346810411,\n        18177751737739153338153217698774510185696788019377850245260475034576050820091,\n        19603444733183990109492724100282114612026332366576932662794133334264283907557,\n        10548274686824425401349248282213580046351514091431715597441736281987273193140,\n        1823201861560942974198127384034483127920205835821334101215923769688644479957,\n        11867589662193422187545516240823411225342068709600734253659804646934346124945,\n        18718569356736340558616379408444812528964066420519677106145092918482774343613,\n        10530777752259630125564678480897857853807637120039176813174150229243735996839,\n        20486583726592018813337145844457018474256372770211860618687961310422228379031,\n        12690713110714036569415168795200156516217175005650145422920562694422306200486,\n        17386427286863519095301372413760745749282643730629659997153085139065756667205,\n        2216432659854733047132347621569505613620980842043977268828076165669557467682,\n        6309765381643925252238633914530877025934201680691496500372265330505506717193,\n        20806323192073945401862788605803131761175139076694468214027227878952047793390,\n        4037040458505567977365391535756875199663510397600316887746139396052445718861,\n        19948974083684238245321361840704327952464170097132407924861169241740046562673,\n        845322671528508199439318170916419179535949348988022948153107378280175750024,\n        16222384601744433420585982239113457177459602187868460608565289920306145389382,\n        10232118865851112229330353999139005145127746617219324244541194256766741433339,\n        6699067738555349409504843460654299019000594109597429103342076743347235369120,\n        6220784880752427143725783746407285094967584864656399181815603544365010379208,\n        6129250029437675212264306655559561251995722990149771051304736001195288083309,\n        10773245783118750721454994239248013870822765715268323522295722350908043393604,\n        4490242021765793917495398271905043433053432245571325177153467194570741607167,\n        19596995117319480189066041930051006586888908165330319666010398892494684778526,\n        837850695495734270707668553360118467905109360511302468085569220634750561083,\n        11803922811376367215191737026157445294481406304781326649717082177394185903907,\n        10201298324909697255105265958780781450978049256931478989759448189112393506592,\n        13564695482314888817576351063608519127702411536552857463682060761575100923924,\n        9262808208636973454201420823766139682381973240743541030659775288508921362724,\n        173271062536305557219323722062711383294158572562695717740068656098441040230,\n        18120430890549410286417591505529104700901943324772175772035648111937818237369,\n        20484495168135072493552514219686101965206843697794133766912991150184337935627,\n        19155651295705203459475805213866664350848604323501251939850063308319753686505,\n        11971299749478202793661982361798418342615500543489781306376058267926437157297,\n        18285310723116790056148596536349375622245669010373674803854111592441823052978,\n        7069216248902547653615508023941692395371990416048967468982099270925308100727,\n        6465151453746412132599596984628739550147379072443683076388208843341824127379,\n        16143532858389170960690347742477978826830511669766530042104134302796355145785,\n        19362583304414853660976404410208489566967618125972377176980367224623492419647,\n        1702213613534733786921602839210290505213503664731919006932367875629005980493,\n        10781825404476535814285389902565833897646945212027592373510689209734812292327,\n        4212716923652881254737947578600828255798948993302968210248673545442808456151,\n        7594017890037021425366623750593200398174488805473151513558919864633711506220,\n        18979889247746272055963929241596362599320706910852082477600815822482192194401,\n        13602139229813231349386885113156901793661719180900395818909719758150455500533,\n    ];\n\n    let mut r = 0;\n    for elem in array {\n        let h = mimc(elem, r, constants, exponent);\n        r = r + elem + h;\n    }\n    r\n}\n",
        "path": "std/hash"
      },
      "22": {
        "source": "\nimpl Field {\n    #[builtin(to_le_bits)]\n    pub fn to_le_bits(_x : Field, _bit_size: u32) -> [u1] {}\n    #[builtin(to_be_bits)]\n    pub fn to_be_bits(_x : Field, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(x : Field, byte_size: u32) -> [u8] {\n        x.to_le_radix(256, byte_size)\n    }\n    pub fn to_be_bytes(x : Field, byte_size: u32) -> [u8] {\n        x.to_be_radix(256, byte_size)\n    }\n\n    #[builtin(to_le_radix)]\n    //decompose _x into a _result_len vector over the _radix basis\n    //_radix must be less than 256\n    pub fn to_le_radix(_x : Field, _radix: u32, _result_len: u32) -> [u8] {}\n    #[builtin(to_be_radix)]\n    pub fn to_be_radix(_x : Field, _radix: u32, _result_len: u32) -> [u8] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n",
        "path": "std/field"
      },
      "36": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\n\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)[0]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)[0]\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    private_data_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.private_data_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { private_data_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)[0]\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        dep::std::hash::pedersen_with_separator(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)[0]\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)[0]\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        dep::std::hash::pedersen_with_separator(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = dep::std::hash::pedersen_with_separator(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS)[0];\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        dep::std::hash::pedersen_with_separator(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)[0]\n    }\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/abi"
      },
      "37": {
        "source": "use dep::std::hash;\nuse crate::constants_gen::GENERATOR_INDEX__CONTRACT_ADDRESS;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n  hash::pedersen_with_separator([pub_key_x, pub_key_y, partial_address], GENERATOR_INDEX__CONTRACT_ADDRESS)[0]\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/address"
      },
      "39": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    private_data_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/context"
      },
      "40": {
        "source": "use dep::std::hash::{pedersen_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_with_separator([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)[0]\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/hash"
      },
      "41": {
        "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N],\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(\n    context: &mut PublicContext,\n    log: T,\n) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(\n    context: &mut PrivateContext,\n    log: T,\n) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/log"
      },
      "46": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse crate::constants_gen::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let preimage = serialize(*note);\n    assert(notify_created_note(storage_slot, preimage, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(\n    context: &mut PrivateContext,\n    note: Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/note/lifecycle"
      },
      "47": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(\n    fields: [Field; N],\n    selects: BoundedVec<Option<Select>, N>,\n) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    };\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields,\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteViewerOptions<Note, N>,\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    };\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    };\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/note/note_getter"
      },
      "49": {
        "source": "use dep::std::hash::{pedersen, pedersen_with_separator};\nuse crate::constants_gen::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen([storage_slot, note_hash])[0]\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_with_separator(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)[0]\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_with_separator(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)[0]\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/note/note_hash"
      },
      "53": {
        "source": "use crate::note::{\n    note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\npub fn compute_inner_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(\n    note_interface: NoteInterface<Note, N>,\n    note_header: NoteHeader,\n    preimage: [Field; S],\n) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(preimage, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/note/utils"
      },
      "55": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/arguments"
      },
      "60": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKey)]\nfn get_public_key_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_internal(address: Field) -> [Field; 3] {\n  get_public_key_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n  let result = get_public_key_internal(address);\n  let pub_key_x = result[0];\n  let pub_key_y = result[1];\n  let partial_address = result[2];\n  \n  let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n  assert(calculated_address == address);\n  \n  Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/get_public_key"
      },
      "63": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call"
      },
      "65": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _preimage: [Field; N],\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    preimage: [Field; N],\n    inner_note_hash: Field,\n) -> Field {\n    notify_created_note_oracle(storage_slot, preimage, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(\n    _nullifier: Field,\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(\n    nullifier: Field,\n    inner_note_hash: Field,\n) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S],\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S],\n)-> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, return_size, placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let preimage = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(preimage);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    };\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(\n    _inner_nullifier: Field,\n) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/notes"
      },
      "66": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/storage"
      },
      "67": {
        "source": "use crate::types::point::Point;\nuse crate::constants_gen::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: Field,\n    _storage_slot: Field,\n    _encryption_pub_key: Point,\n    _preimage: [Field; N],\n)  -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    preimage: [Field; N],\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(\n        contract_address,\n        storage_slot,\n        encryption_pub_key,\n        preimage,\n    ), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T)  -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/logs"
      },
      "69": {
        "source": "use crate::{\n    abi,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}\n\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/public_call_stack_item"
      },
      "73": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = dep::std::hash::pedersen([self.storage_slot, key])[0];\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/state_vars/map"
      },
      "74": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/state_vars/public_state"
      },
      "75": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse crate::constants_gen::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self, note: &mut Note) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/state_vars/set"
      },
      "80": {
        "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/types/vec"
      },
      "85": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\nuse crate::types::address::AztecAddress;\n\nglobal AZTEC_ADDRESS_SERIALIZED_LEN: Field = 1;\n\nfn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> AztecAddress {\n    AztecAddress::new(fields[0])\n}\n\nfn serialize(value: AztecAddress) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n    [value.address]\n}\n\nglobal AztecAddressSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize,\n};",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/types/type_serialization/aztec_address_serialization"
      },
      "86": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/utils"
      },
      "87": {
        "source": "struct SafeU120 {\n    value: u120,\n}\n\nimpl SafeU120 {\n    pub fn min() -> Self {\n        Self {\n            value: 0\n        }\n    }\n\n    pub fn max() -> Self {\n        Self {\n            value: 0xffffffffffffffffffffffffffffff\n        }\n    }\n\n    pub fn new(\n        value: Field,\n    ) -> Self {\n        // Check that it actually will fit. Spending a lot of constraints here :grimacing:\n        let bytes = value.to_be_bytes(32);\n        for i in 0..17 {\n            assert(bytes[i] == 0, \"Value too large for SafeU120\");\n        }\n        Self {\n            value: value as u120\n        }\n    }\n\n    pub fn is_zero(\n        self: Self,\n    ) -> bool {\n        self.value == 0\n    }\n\n    pub fn eq(\n        self: Self,\n        other: Self\n    ) -> bool {\n        self.value == other.value\n    }\n\n    pub fn lt(self: Self, other: Self) -> bool {\n        self.value < other.value\n    }\n\n    pub fn le(self: Self, other: Self) -> bool {\n        self.value <= other.value\n    }\n\n    pub fn gt(self: Self, other: Self) -> bool {\n        self.value > other.value\n    }\n\n    pub fn ge(self: Self, other: Self) -> bool {\n        self.value >= other.value\n    }\n\n    pub fn sub(\n      self: Self,\n      b: Self,\n    ) -> Self {\n        assert(self.value >= b.value, \"Underflow\");\n        Self {\n            value: self.value - b.value\n        }\n    }\n\n    pub fn add(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value + b.value;\n        assert(c >= self.value, \"Overflow\");\n        Self {\n            value: c\n        }\n    }\n\n    pub fn mul(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value * b.value;\n        if !b.is_zero() {\n            assert(c / b.value == self.value, \"Overflow\");\n        }\n        Self {\n            value: c\n        }\n    }\n\n    pub fn div(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        assert(!b.is_zero(), \"Divide by zero\");\n        Self {\n            value: self.value / b.value\n        }\n    }\n\n    pub fn mul_div(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        self.mul(b).div(divisor)\n    }\n\n    pub fn mul_div_up(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        let c = self.mul(b);\n        assert(!divisor.is_zero(), \"Divide by zero\");\n        let adder = ((self.value * b.value % divisor.value) as u120 > 0) as u120;\n        c.div(divisor).add(Self {value: adder})\n    }\n\n    // todo: implement mul_div with 240 bit intermediate values.\n}\n\n#[test]\nfn test_init() {\n    let a = SafeU120::new(1);\n    assert(a.value == 1);\n}\n\n#[test]\nfn test_init_max() {\n    let a = SafeU120::max();\n    assert(a.value == 0xffffffffffffffffffffffffffffff);\n}\n\n#[test]\nfn test_init_min() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n}\n\n#[test]\nfn test_is_zero() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n    assert(a.is_zero() == true);\n}\n\n#[test]\nfn test_eq() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(1);\n    assert(a.eq(b));\n}\n\n#[test]\nfn test_lt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(a.lt(b));\n    assert(b.lt(a) == false);\n}\n\n\n#[test]\nfn test_le() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.le(b));\n    assert(a.le(c));\n    assert(c.le(a) == false);\n}\n\n#[test]\nfn test_gt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(b.gt(a));\n    assert(a.gt(b) == false);\n}\n\n\n#[test]\nfn test_ge() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.ge(b));\n    assert(a.ge(c) == false);\n    assert(c.ge(a));\n}\n\n#[test(should_fail)]\nfn test_init_too_large() {\n    let b = SafeU120::max().value as Field + 1; // max + 1\n    let _a = SafeU120::new(b);\n}\n\n#[test]\nfn test_add() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let c = SafeU120::add(a, b);\n    assert(c.value == 3);\n}\n\n#[test(should_fail)]\nfn test_add_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(1);\n    let _c = SafeU120::add(a, b);\n}\n\n#[test]\nfn test_sub() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(1);\n    let c = SafeU120::sub(a, b);\n    assert(c.value == 1);\n}\n\n#[test(should_fail)]\nfn test_sub_underflow() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let _c = SafeU120::sub(a, b);\n}\n\n#[test]\nfn test_mul() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(3);\n    let c = SafeU120::mul(a, b);\n    assert(c.value == 6);\n}\n\n#[test(should_fail)]\nfn test_mul_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let _c = SafeU120::mul(a, b);\n}\n\n#[test]\nfn test_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::div(a, b);\n    assert(c.value == 2);\n}\n\n#[test(should_fail)]\nfn test_div_by_zero() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(0);\n    let _c = SafeU120::div(a, b);\n}\n\n#[test]\nfn test_mul_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div(a, b, c);\n    assert(d.value == 9);\n}\n\n#[test(should_fail)]\nfn test_mul_div_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test(should_fail)]\nfn test_mul_div_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(4);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test]\nfn test_mul_div_up_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(5);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 4);\n}\n\n#[test]\nfn test_mul_div_up_non_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 9);\n}\n\n\n#[test(should_fail)]\nfn test_mul_div_up_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(9);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n\n// It should not be possible for us to overflow `mul_div_up` through the adder, since that require the divisor to be 1\n// since we otherwise would not be at the max value. If divisor is 1, adder is 0.\n#[test(should_fail)]\nfn test_mul_div_up_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n",
        "path": "/home/maga/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/safe-math/src/safe_u120"
      },
      "93": {
        "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\n\nstruct Market {\n    totalLongs: u120,\n    totalShorts: u120,\n    maxTotalLongs: u120,\n    maxTotalShorts: u120,\n    maxLeverage: u32,\n    openFeeRate: u64,\n    baseSpreadRate: u64\n}\n\nglobal MARKET_SERIALIZED_LEN: Field = 7;\nglobal HUNDRED_PERCENT: u64 = 1000000000000;\n\n\nfn deserialize(fields: [Field; MARKET_SERIALIZED_LEN]) -> Market {\n    Market {\n        totalLongs: fields[0] as u120,\n        totalShorts: fields[1] as u120,\n        maxTotalLongs: fields[2] as u120,\n        maxTotalShorts: fields[3] as u120,\n        maxLeverage: fields[4] as u32,\n        openFeeRate: fields[5] as u64,\n        baseSpreadRate: fields[6] as u64\n    }\n}\n\nfn serialize(market: Market) -> [Field; MARKET_SERIALIZED_LEN] {\n    [\n        market.totalLongs as Field,\n        market.totalShorts as Field,\n        market.maxTotalLongs as Field,\n        market.maxTotalShorts as Field,\n        market.maxLeverage as Field,\n        market.openFeeRate as Field,\n        market.baseSpreadRate as Field\n    ]\n}\n\nimpl Market {\n    fn serialize(self: Self) -> [Field; MARKET_SERIALIZED_LEN] {\n        serialize(self)\n    }\n}\n\nglobal MarketSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize\n};",
        "path": "/home/maga/projects/noir-contracts/src/contracts/src/types/market"
      },
      "94": {
        "source": "use dep::aztec::context::{PrivateContext, PublicContext, Context};\nuse dep::aztec::types::address::AztecAddress;\nuse dep::std::option::Option;\nuse dep::aztec::note::{\n    utils::compute_note_hash_for_read_or_nullify,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_siloed_note_hash,\n};\nuse dep::aztec::oracle::get_secret_key::get_secret_key;\nuse dep::aztec::hash::{compute_secret_hash};\n\nstruct PnlAndLiq {\n    pnl: u120,\n    positive: bool,\n    liqPrice: u120\n}\n\nstruct PositionNote {\n    id: u32,\n    marketIdx: u8,\n    posType: u8, // 0 - long, 1 - short\n    initialCollateral: u120,\n    openFee: u120,\n    openPrice: u120, // price after spread apply\n    markPrice: u120, // market price on moment of positionNote creation\n    leverage: u32,\n    liquidationThresholdRate: u64,\n    owner: Field,\n\n    // this fields will exists only on 'request' phase of positionNote\n    // we need it because we need 1 mega-struct because of compute_note_hash_and_nullifier can deserialize only 1 type of notes\n    secret_hash: Field,\n    secret: Field,\n\n    header: NoteHeader\n}\n\nglobal POSITION_NOTE_SERIALIZED_LEN: Field = 11;\nglobal LIQUIDATION_THRESHOLD_RATE: u64 = 100000000000; // 10%\nglobal LEVERAGE_BASE: u120 = 1000000;\nglobal SCALING_FACTOR: u120 = 1000000000000000000; // 10*18, used in division to prevent precision loss\n\n\nimpl PositionNote {\n    pub fn new(\n        id: u32,\n        marketIdx: u8,\n        posType: u8,\n        initialCollateral: u120,\n        openFee: u120,\n        openPrice: u120,\n        markPrice: u120,\n        leverage: u32,\n        liquidationThresholdRate: u64,\n        owner: Field,\n        secret_hash: Field\n    ) -> Self {\n        Self {\n            id: id,\n            marketIdx: marketIdx,\n            posType: posType,\n            initialCollateral: initialCollateral,\n            openFee: openFee,\n            openPrice: openPrice,\n            markPrice: markPrice,\n            leverage: leverage,\n            liquidationThresholdRate: liquidationThresholdRate,\n            owner: owner,\n            secret_hash: secret_hash,\n            secret: 0,\n            header: NoteHeader::empty()\n        }\n    }\n\n    pub fn serialize(self: Self) -> [Field; POSITION_NOTE_SERIALIZED_LEN] {\n        [\n            self.id as Field,\n            self.marketIdx as Field,\n            self.posType as Field,\n            self.initialCollateral as Field,\n            self.openFee as Field,\n            self.openPrice as Field,\n            self.markPrice as Field,\n            self.leverage as Field,\n            self.liquidationThresholdRate as Field,\n            self.owner,\n            self.secret_hash\n        ]\n    }\n\n    pub fn deserialize(preimage: [Field; POSITION_NOTE_SERIALIZED_LEN]) -> Self {\n        PositionNote {\n            id: preimage[0] as u32,\n            marketIdx: preimage[1] as u8,\n            posType: preimage[2] as u8,\n            initialCollateral: preimage[3] as u120,\n            openFee: preimage[4] as u120,\n            openPrice: preimage[5] as u120,\n            markPrice: preimage[6] as u120,\n            leverage: preimage[7] as u32,\n            liquidationThresholdRate: preimage[8] as u64,\n            owner: preimage[9],\n            secret_hash: preimage[10],\n            secret: 0,\n            header: NoteHeader::empty()\n        }\n    }\n\n    pub fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen(self.serialize())[0]\n    }\n\n    pub fn compute_nullifier(self) -> Field {\n        // TODO(#1386): should use `compute_note_hash_for_read_or_nullify` once public functions inject nonce!\n        let siloed_note_hash = compute_siloed_note_hash(PositionNoteSerializationMethods, self);\n        // TODO(#1205) Should use a non-zero generator index.\n        dep::std::hash::pedersen([self.secret, siloed_note_hash])[0]\n    }\n\n    // pub fn compute_nullifier(self) -> Field {\n    //     let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(PositionNoteSerializationMethods, self);\n    //     let secret = get_secret_key(self.owner);\n    //     dep::std::hash::pedersen([\n    //         note_hash_for_nullify,\n    //         secret.low,\n    //         secret.high,\n    //     ])[0]\n    // }\n\n    // note checker\n    pub fn knows_secret(self, secret: Field) {\n        let hash = compute_secret_hash(secret);\n        assert(self.secret_hash == hash);\n    }\n\n    pub fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n}\n\nfn deserialize(preimage: [Field; POSITION_NOTE_SERIALIZED_LEN]) -> PositionNote {\n    PositionNote::deserialize(preimage)\n}\n\nfn serialize(note: PositionNote) -> [Field; POSITION_NOTE_SERIALIZED_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: PositionNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: PositionNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: PositionNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut PositionNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nglobal PositionNoteSerializationMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n};\n",
        "path": "/home/maga/projects/noir-contracts/src/contracts/src/types/position_note"
      },
      "95": {
        "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\nuse dep::safe_math::SafeU120;\n\nglobal SAFE_U120_SERIALIZED_LEN: Field = 1;\n\n// This is safe when reading from storage IF only correct safeu120 was written to storage\nfn deserializeU120(fields: [Field; SAFE_U120_SERIALIZED_LEN]) -> SafeU120 {\n    SafeU120{value: fields[0] as u120}\n}\n\nfn serializeU120(value: SafeU120) -> [Field; SAFE_U120_SERIALIZED_LEN] {\n    [value.value as Field]\n}\n\nglobal SafeU120SerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeU120,\n    serialize: serializeU120,\n};",
        "path": "/home/maga/projects/noir-contracts/src/contracts/src/types/safe_u120_serialization"
      },
      "96": {
        "source": "use dep::aztec::context::{PrivateContext, PublicContext, Context};\nuse dep::aztec::types::address::AztecAddress;\nuse dep::std::option::Option;\nuse crate::types::position_set::PositionSet;\n\n\nstruct PositionMap {\n    context: Context,\n    storage_slot: Field,\n}\n\n\nimpl PositionMap {\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self {\n            context,\n            storage_slot,\n        }\n    }\n\n    pub fn at(self, owner: AztecAddress) -> PositionSet {\n        let derived_storage_slot = self.slot_for(owner);\n        PositionSet::new(self.context, owner, derived_storage_slot)\n    }\n\n    pub fn slot_for(self, owner: AztecAddress) -> Field {\n        dep::std::hash::pedersen([self.storage_slot, owner.address])[0]\n    }\n}\n",
        "path": "/home/maga/projects/noir-contracts/src/contracts/src/types/position_map"
      },
      "97": {
        "source": "use dep::std::option::Option;\nuse dep::aztec::{\n  context::Context,\n  state_vars::set::Set,\n  log::emit_encrypted_log,\n  types::address::AztecAddress,\n};\nuse dep::aztec::note::{\n    note_getter_options::{NoteGetterOptions}\n};\nuse dep::aztec::oracle::{\n    get_public_key::get_public_key,\n};\nuse crate::types::position_note::{PositionNote, PositionNoteSerializationMethods, POSITION_NOTE_SERIALIZED_LEN};\n\n\nstruct PositionSet {\n  context: Context,\n  owner: AztecAddress,\n  set: Set<PositionNote, POSITION_NOTE_SERIALIZED_LEN>\n}\n\n\nimpl PositionSet {\n  pub fn new(context: Context, owner: AztecAddress, storage_slot: Field) -> Self {\n    assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n    let set = Set {\n        context,\n        storage_slot,\n        note_interface: PositionNoteSerializationMethods,\n    };\n    Self {\n        context,\n        owner,\n        set,\n    }\n  }\n\n    pub fn add(self: Self, position: &mut PositionNote) {\n        self.set.insert(position);\n\n        let context = self.context.private.unwrap();\n        let application_contract_address = context.this_address();\n        let encryption_pub_key = get_public_key(self.owner.address);\n        let encrypted_data = position.serialize();\n\n        emit_encrypted_log(\n            context,\n            application_contract_address,\n            self.set.storage_slot,\n            encryption_pub_key,\n            encrypted_data,\n        );\n    }\n\n    pub fn remove(self: Self, position_id: Field) {\n        let options = NoteGetterOptions::new().select(0, position_id).set_limit(1);\n        let maybe_notes = self.set.get_notes(options);\n        if maybe_notes[0].is_some() {\n            let note = maybe_notes[0].unwrap_unchecked();\n            self.set.remove(note);\n        }\n        \n    }\n}\n",
        "path": "/home/maga/projects/noir-contracts/src/contracts/src/types/position_set"
      }
    }
  }
}